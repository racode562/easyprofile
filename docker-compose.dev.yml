version: "3.8"
services:
  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000
    command: ["sh", "-c", "npm install && npm start"]
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - backend_uploads:/app/uploads
    user: "node"
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/easyprofile
      - JWT_SECRET=supersecretdev
      - PORT=5000
      - FAL_API_KEY=65711c92-9fee-4a21-ae8e-46f4c2876ae9:e435a308bce51b35622f615078db4d2d
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint: ["sh", "-c", "./wait-for-it.sh mongo:27017 -- npm run dev"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:5.0
    container_name: "easyprofile-mongo-dev"
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-dev:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data-dev:
  frontend_node_modules:
  backend_node_modules:
  backend_uploads:
